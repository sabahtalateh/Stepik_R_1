ggplot(df1, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
?iris
df <- iris
str(df)
df1 <- subset(df, Species != "setosa")
str(df1)
table(df1$Species)
hist(df1$Sepal.Length)
library(ggplot2)
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length, fill = Species))+
geom_density(alpha = 0.4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
shapiro.test(df$Sepal.Length)
shapiro.test(df1$Sepal.Length)
str(df1)
shapiro.test(df1$Sepal.Length[df1$Species == 'setosa'])
df1$Species == 'setosa']
df1$Species
shapiro.test(df1$Sepal.Length[df1$Species == 'versicolor'])
shapiro.test(df1$Sepal.Length[df1$Species == 'versicolor']) # ~ 0.465 ок
shapiro.test(df1$Sepal.Length[df1$Species == 'virginica']) # ~ 0.465 ок
View(df1)
bartlett.test(Sepal.Length ~ Species, df1)
t.test(Sepal.Length ~ Species, df1)
test1 <- t.test(Sepal.Length ~ Species, df1)
str(test1)
test1$p.value
t.test(df1$Sepal.Length, mu = 8)
t.test(df1$Sepal.Length, mu = 6.2)
t.test(df1$Sepal.Length, mu = 6.262)
t.test(df1$Sepal.Length, mu = 6.262, alternative = T)
t.test(df1$Sepal.Length, mu = 6.262, alternative = F)
t.test(df1$Sepal.Length, mu = 6.262)
t.test(df1$Sepal.Length, mu = 6)
t.test(df1$Sepal.Length, mu = 6.2)
t.test(df1$Sepal.Length, df1$Sepal.Width, paired = F)
t.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test)
ms <- ToothGrowth
View(ms)
j05 <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
ac1 <- ToothGrowth$len[ToothGrowth$supp == 'AC' & ToothGrowth$dose == 1]
shapiro.test(j05)
shapiro.test(ac1)
ac1 <- ToothGrowth$len[ToothGrowth$supp == 'AC' & ToothGrowth$dose == 1]
ac1 <- ToothGrowth$len[ToothGrowth$supp == 'AC' & ToothGrowth$dose == 1.0]
vc1 <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 1.0]
shapiro.test(ac1)
shapiro.test(vc1)
by(iris$Sepal.Length, INDICES = ToothGrowth$dose, shapiro.test)
by(iris$Sepal.Length, INDICES = ToothGrowth$dose, shapiro.test, na.pass = T)
by(iris$Sepal.Length, INDICES = ToothGrowth$dose, shapiro.test)
by(iris$Sepal.Length, INDICES = ToothGrowth$supp, shapiro.test)
by(ToothGrowth$dose, INDICES = ToothGrowth$supp, shapiro.test)
by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test)
by(ToothGrowth$len, INDICES = ToothGrowth$supp, shapiro.test)
by(ToothGrowth$len, INDICES = c(ToothGrowth$supp), shapiro.test)
by(ToothGrowth$len, INDICES = c(ToothGrowth$supp, ToothGrowth$dose), shapiro.test)
by(ToothGrowth$len, INDICES = ToothGrowth$dose, shapiro.test)
by(ToothGrowth$len, INDICES = ToothGrowth$dose, shapiro.test)
by(ToothGrowth$len, INDICES = ToothGrowth$supp, shapiro.test)
?iris
df <- iris
str(df)
df1 <- subset(df, Species != "setosa")
str(df1)
table(df1$Species)
hist(df1$Sepal.Length)
library(ggplot2)
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length, fill = Species))+
geom_density(alpha = 0.4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
# Тест Шапиро-Вилка для проверки нормальности распределения
# можно ли применть Т-тест если p-значение больше чем 0.05 то всё ок
# Проверим всю нашу выборку p=0.1464 - всё ок
shapiro.test(df1$Sepal.Length)
# Проверим отдельные виды
str(df1)
shapiro.test(df1$Sepal.Length[df1$Species == 'versicolor']) # ~ 0.465 ок
shapiro.test(df1$Sepal.Length[df1$Species == 'virginica']) # ~ 0.2583 ок
# Гомогенность проверяем так p=0.1478
bartlett.test(Sepal.Length ~ Species, df1)
# p-value = 1.866e-07 - Сильно меньше 0.05 отклоняем 0-гипотезу
# Проверка равенства средних по 2 группам
t.test(Sepal.Length ~ Species, df1)
test1 <- t.test(Sepal.Length ~ Species, df1)
str(test1)
test1$p.value
# Проверка равенства среднего какому то числу
t.test(df1$Sepal.Length, mu = 6.2)
# paired == T - выборки зависимые, длина и ширина у одного цветка
t.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
# Применяет по каждому фактору
by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test)
ms <- ToothGrowth
j05 <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
vc1 <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 1.0]
#ggplot(ms, aes())
hist(df1$Sepal.Length)
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(ms, aes(x = len))+
geom_histogram()
ggplot(ToothGrowth[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5], aes(x = len))+
geom_histogram()
ToothGrowth[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
ms1 <- subset(ms, ToothGrowth$supp == 'OJ')
View(ms1)
ms1 <- subset(ms, msGrowth$supp == 'OJ' & ms$dose == 0.5)
ms1 <- subset(ms, ms$supp == 'OJ' & ms$dose == 0.5)
ggplot(ms, aes(x = len))+
geom_histogram()
ggplot(ms1, aes(x = len))+
geom_histogram()
ggplot(ms1, aes(x = len))+
geom_histogram(fill = "white")
ggplot(ms1, aes(x = len))+
geom_histogram(fill = "white", col = "black")
ms2 <- subset(ms, ms$supp == 'VS' & ms$dose == 1)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black")
ms2 <- subset(ms, ms$supp == 'VS' & ms$dose == 1.0)
ms1 <- subset(ms, ms$supp == 'OJ' & ms$dose == 0.5)
ms2 <- subset(ms, ms$supp == 'VS' & ms$dose == 1.0)
ms2 <- subset(ms, ms$supp == 'VS')
ms <- ToothGrowth
ms2 <- subset(ms, ms$supp == 'VS')
View(ms)
ms2 <- subset(ms, ms$supp == 'VC' & ms$dose == 1.0)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black")
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 4)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 10)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 1)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 3)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = .4)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 30)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 1)
ggplot(ms2, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(ms1, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ms3 <- subset(ms, (ms$supp == 'OJ' & ms$dose == 0.5) | (ms$supp == 'VC' & ms$dose == 1.0))
ms3
ggplot(df1, aes(x = supp, y = len))+
geom_boxplot()
ggplot(ms3, aes(x = supp, y = len))+
geom_boxplot()
ggplot(ms3, aes(x = supp, y = len, col = dose))+
geom_boxplot()
ggplot(ms3, aes(x = supp, y = len))+
geom_boxplot()
ggplot(ms3, aes(x = supp, y = len, col = dose))+
geom_boxplot()
t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len
)
t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)
t_stat <- t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)$t
t_stat
t_stat <- t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)
t_stat
t_stat$statistic
t_stat <- t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)$stat
t_stat
setwd("~/Code/Stepik_R_1/m2/l2")
setwd("~/Code/Stepik_R_1/m2/l2")
?iris
df <- iris
str(df)
df1 <- subset(df, Species != "setosa")
str(df1)
table(df1$Species)
hist(df1$Sepal.Length)
library(ggplot2)
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length, fill = Species))+
geom_density(alpha = 0.4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
# Тест Шапиро-Вилка для проверки нормальности распределения
# можно ли применть Т-тест если p-значение больше чем 0.05 то всё ок
# Проверим всю нашу выборку p=0.1464 - всё ок
shapiro.test(df1$Sepal.Length)
# Проверим отдельные виды
str(df1)
shapiro.test(df1$Sepal.Length[df1$Species == 'versicolor']) # ~ 0.465 ок
shapiro.test(df1$Sepal.Length[df1$Species == 'virginica']) # ~ 0.2583 ок
# Гомогенность проверяем так p=0.1478
bartlett.test(Sepal.Length ~ Species, df1)
# p-value = 1.866e-07 - Сильно меньше 0.05 отклоняем 0-гипотезу
# Проверка равенства средних по 2 группам
t.test(Sepal.Length ~ Species, df1)
test1 <- t.test(Sepal.Length ~ Species, df1)
str(test1)
test1$p.value
# Проверка равенства среднего какому то числу
t.test(df1$Sepal.Length, mu = 6.2)
# paired == T - выборки зависимые, длина и ширина у одного цветка
t.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
# Применяет по каждому фактору
by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test)
ms <- ToothGrowth
j05 <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
vc1 <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 1.0]
ms1 <- subset(ms, ms$supp == 'OJ' & ms$dose == 0.5)
ms2 <- subset(ms, ms$supp == 'VC' & ms$dose == 1.0)
ms3 <- subset(ms, (ms$supp == 'OJ' & ms$dose == 0.5) | (ms$supp == 'VC' & ms$dose == 1.0))
ggplot(ms1, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(ms3, aes(x = supp, y = len, col = dose))+
geom_boxplot()
t_stat <- t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)$stat
lek <- read.csv('lekarstva.csv')
View(lek)
t.test(lek$Pressure_before, lek$Pressure_after, paired = T)
ms <- ToothGrowth
j05 <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
vc1 <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 1.0]
ms1 <- subset(ms, ms$supp == 'OJ' & ms$dose == 0.5)
ms2 <- subset(ms, ms$supp == 'VC' & ms$dose == 1.0)
ms3 <- subset(ms, (ms$supp == 'OJ' & ms$dose == 0.5) | (ms$supp == 'VC' & ms$dose == 1.0))
ggplot(ms1, aes(x = len))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(ms3, aes(x = supp, y = len, col = dose))+
geom_boxplot()
t_stat <- t.test(
subset(ms, ToothGrowth$supp == 'OJ' & ms$dose == 0.5)$len,
subset(ms, ToothGrowth$supp == 'VC' & ms$dose == 1.0)$len
)$stat
lek <- read.csv('lekarstva.csv')
t.test(lek$Pressure_before, lek$Pressure_after, paired = T)
setwd("~/Code/Stepik_R_1/m2/l2")
?iris
df <- iris
str(df)
df1 <- subset(df, Species != "setosa")
str(df1)
table(df1$Species)
hist(df1$Sepal.Length)
library(ggplot2)
ggplot(df1, aes(x = Sepal.Length))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length, fill = Species))+
geom_density(alpha = 0.4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
# Тест Шапиро-Вилка для проверки нормальности распределения
# можно ли применть Т-тест если p-значение больше чем 0.05 то всё ок
# Проверим всю нашу выборку p=0.1464 - всё ок
shapiro.test(df1$Sepal.Length)
# Проверим отдельные виды
str(df1)
shapiro.test(df1$Sepal.Length[df1$Species == 'versicolor']) # ~ 0.465 ок
shapiro.test(df1$Sepal.Length[df1$Species == 'virginica']) # ~ 0.2583 ок
# Гомогенность проверяем так p=0.1478
bartlett.test(Sepal.Length ~ Species, df1)
# p-value = 1.866e-07 - Сильно меньше 0.05 отклоняем 0-гипотезу
# Проверка равенства средних по 2 группам
t.test(Sepal.Length ~ Species, df1)
test1 <- t.test(Sepal.Length ~ Species, df1)
str(test1)
test1$p.value
# Проверка равенства среднего какому то числу
t.test(df1$Sepal.Length, mu = 6.2)
# paired == T - выборки зависимые, длина и ширина у одного цветка
t.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
# Применяет по каждому фактору
by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar")
install.packages("Hmisc")
library(Hmisc)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar")
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.1)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.1)+
stat_summary(fun.y = mean, geom = "point")
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange")
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 2)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", size = 4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", size = 2)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", size = 1)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(x = Species, y = Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", size = 1)
wilcox.test(Sepal.Length ~ Species, df1)
wilcox.test(Petal.Length ~ Species, df1)
test2 <- wilcox.test(Petal.Length ~ Species, df1)
str(test2)
test2$statistic
test2$p.value
ggplot(df1, aes(Petal.Length ~ Species))+
geom_boxplot()
ggplot(df1, aes(x = Species, y = Petal.Length))+
geom_boxplot()
wilcox.test(df1$Petal.Length, df1$Sepal.Width, paired = T)
paired_wtest <- wilcox.test(df1$Petal.Length, df1$Sepal.Width, paired = T)
setwd("~/Code/Stepik_R_1/m2/l2")
setwd("~/Code/Stepik_R_1/m2/l2")
read.table('dd.txt')
dd <- read.table('dd.txt')
bartlett.test(1 ~ 2, dd)
dd <- names(v, group)
colnames(dd)
colnames(dd) <- c('v', 'grp')
dd$v
bartlett.test(v ~ grp, dd)
t.test(v ~ grp, dd)
dd <- read.table('dd1.txt')
colnames(dd) <- c('v', 'grp')
bartlett.test(v ~ grp, dd)
wilcox.test(v ~ grp, dd)
dd <- read.table('dd2.txt')
colnames(dd) <- c('v', 'grp')
bartlett.test(v ~ grp, dd)
wilcox.test(v ~ grp, dd)
wilcox.test(v ~ grp, dd, na.action = "REMOVE")
wilcox.test(v ~ grp, dd, na.action = 0)
dd <- read.table('dd3.txt')
colnames(dd) <- c('v', 'grp')
bartlett.test(v ~ grp, dd)
t.test(v ~ grp, dd)
bartlett.test(v ~ grp, dd, var.equal = T)
dd <- read.table('dd4.txt')
colnames(dd) <- c('v', 'grp')
bartlett.test(v ~ grp, dd, var.equal = T)
bartlett.test(v ~ grp, dd, var.equal = TRUE)
bartlett.test(v ~ grp, dd)
t.test(v ~ grp, dd)
wilcox.test(dd$v, dd$grp)
wilcox.test(dd$v, dd$grp)
wilcox.test(v ~ grp, dd)
t.test(dd$v, dd$grp, var.equal = T)
View(dd)
dd$d1 <- dd[dd$grp == 1]
dd1 <- dd[dd$grp == 1]
dd <- read.table('dd4.txt')
colnames(dd) <- c('v', 'grp')
dd1 <- dd[dd$grp == 1]
dd1 <- subset(dd, dd$grp == 1)
dd1 <- subset(dd, dd$grp == 1)
dd2 <- subset(dd, dd$grp == 2)
t.test(dd1, dd2, var.equal = T)
t.test(v ~ grp, dd)
t.test(dd1, dd2, var.equal = T)
dd <- read.table('dd5.txt')
colnames(dd) <- c('v', 'grp')
bartlett.test(v ~ grp, dd)
dd1 <- subset(dd, dd$grp == 1)
dd2 <- subset(dd, dd$grp == 2)
t.test(v ~ grp, dd)
t.test(dd1, dd2, var.equal = T)
dd <- read.table('dd6.txt')
View(dd)
bartlett.test(V1 ~ V2, dd)
t.test(V1 ~ V2, dd)
bartlett.test(dd$V1, dd$V2)
dd1 <- subset(dd, dd$V2 == 1)
dd2 <- subset(dd, dd$V2 == 2)
bartlett.test(dd1, dd2)
t.test(V1 ~ V2, dd)
t.test(dd1, dd2, var.equal = T)
t.test(dd1, dd2, var.equal = TRUE)
dd <- read.table('dd6.txt')
bartlett.test(V1 ~ V2, dd)
dd <- read.table('dd7.txt')
dd <- read.table('dd7.txt')
dd1 <- subset(dd, dd$V2 == 1)
dd2 <- subset(dd, dd$V2 == 2)
bartlett.test(V1 ~ V2, dd)
t.test(dd1, dd2, var.equal = TRUE)
t.test(V1 ~ V2, dd)
dd <- read.table('dd8.txt')
dd1 <- subset(dd, dd$V2 == 1)
dd2 <- subset(dd, dd$V2 == 2)
bartlett.test(V1 ~ V2, dd)
wilcox.test(V1, V2, dd)
dd <- read.table('dd8.txt')
dd1 <- subset(dd, dd$V2 == 1)
dd2 <- subset(dd, dd$V2 == 2)
bartlett.test(V1 ~ V2, dd)
wilcox.test(V1, V2, dd)
wilcox.test(V1 ~ V2, dd)
wilcox.test(df$V1, df$V2)
wilcox.test(dd$V1, dd$V2)
dd <- read.table('dd9.txt')
dd1 <- subset(dd, dd$V2 == 1)
dd2 <- subset(dd, dd$V2 == 2)
bartlett.test(V1 ~ V2, dd)
wilcox.test(V1 ~ V2, dd)
