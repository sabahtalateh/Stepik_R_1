theme_bw()
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
tg <- ToothGrowth
str(tg)
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
#  stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
str(tg)
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = dose))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
str(tg)
? ToothGrowth
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
tg <- ToothGrowth
tg$dose <- as.factor(tg$dose)
str(tg)
ggplot(ToothGrowth, aes(x = dos), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dos, y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, grouping = dose)+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, grouping = dose))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = dose))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
ggplot(ToothGrowth, aes(x = dose, y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
my_calc <- function(x, y) {
s <- x + y
return(s)
}
my_calc <- function(x, y) {
s <- x + y
return(s)
}
my_calc(x = 10, y = 20)
res <- my_calc(x = 10, y = 20)
my_calc <- function(x, y) {
s <- x + y
d <- x - y
return(c(s, d))
}
res <- my_calc(x = 10, y = 20)
my_calc <- function(x, y, z = 10) {
s <- x + y + z
d <- x - y - z
return(c(s, d))
}
res <- my_calc(x = 10, y = 20)
res <- my_calc(1,2,3)
my_calc(1,2,3)
my_calc(1,2)
z = 10
my_calc <- function(x, y, z = 10) {
s <- x + y + z
d <- x - y - z
return(c(s, d))
}
my_calc(1,2)
distr1 <- rnorm(100)
distr1 <- rnorm(100)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
ggplot(data = distr1, aes(x = distr1))+
geom_histogram()
library(ggplot2)
distr1 <- rnorm(100)
ggplot(data = distr1, aes(x = distr1))+
geom_histogram()
library(ggplot2)
distr1 <- rnorm(100)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
hist(distr1)
mean(distr1)
mean(distr1, na.rm = T)
my_na_rm <- function(v) {
v[is.na(v)] <- mean(v, na.rm = T)
}
my_na_rm <- function(v) {
v[is.na(v)] <- mean(v, na.rm = T)
}
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
my_na_rm <- function(v) {
v[is.na(v)] <- mean(v, na.rm = T)
return(v)
}
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
distr1
if (!is.numeric(v)) {
print("Argument is not numeric")
}
my_na_rm <- function(v) {
if (!is.numeric(v)) {
print("Argument is not numeric")
}
v[is.na(v)] <- mean(v, na.rm = T)
return(v)
}
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
hist(distr1)
my_na_rm(c("1", "2", NA))
my_na_rm <- function(v) {
if (is.numeric(v)) {
v[is.na(v)] <- mean(v, na.rm = T)
return(v)
} else {
print("Argument is not numeric")
}
}
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
hist(distr1)
my_na_rm(c("1", "2", NA))
my_na_rm <- function(v) {
if (is.numeric(v)) {
norm_test <- shapiro.test(v) {
if (norm_test$p > 0.05) {
v[is.na(v)] <- mean(v, na.rm = T)
} else {
v[is.na(v)] <- median(v, na.rm = T)
}
}
return(v)
} else {
print("Argument is not numeric")
}
}
my_na_rm <- function(v) {
if (is.numeric(v)) {
norm_test <- shapiro.test(v)
if (norm_test$p > 0.05) {
v[is.na(v)] <- mean(v, na.rm = T)
} else {
v[is.na(v)] <- median(v, na.rm = T)
}
return(v)
} else {
print("Argument is not numeric")
}
}
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
distr1 <- my_na_rm(distr1)
hist(distr1)
my_na_rm(distr1)
my_na_rm <- function(v) {
if (is.numeric(v)) {
norm_test <- shapiro.test(v)
if (norm_test$p > 0.05) {
v[is.na(v)] <- mean(v, na.rm = T)
print("NA were replaced with mean")
} else {
v[is.na(v)] <- median(v, na.rm = T)
print("NA were replaced with median")
}
return(v)
} else {
print("Argument is not numeric")
}
}
my_na_rm(distr1)
distr1[1:4] <- NA
distr1 <- my_na_rm(distr1)
distr1[1:1] <- NA
distr1 <- my_na_rm(distr1)
d1 <- my_na_rm(d1)
d1 <- rnorm(2000)
d1[1:10] <- NA
d2 <- runif(2000)
d2[1:10] <- NA
d1 <- my_na_rm(d1)
d1 <- rnorm(2000)
d2 <- runif(2000)
hist(d1)
hist(d2)
d2[1:10] <- NA
hist(d2)
d1 <- rnorm(2000)
d1[1:10] <- NA
d2 <- runif(2000)
d2[1:10] <- NA
d1 <- rnorm(2000)
d1 <- rnorm(2000)
d1[1:10] <- NA
d2 <- runif(2000)
d2[1:10] <- NA
hist(d1)
hist(d2)
d1 <- my_na_rm(d1)
d2 <- my_na_rm(d2)
setwd("~/Code/Stepik_R_1/m2/l4_functions")
setwd("~/Code/Stepik_R_1/m2/l4_functions")
source("my_na_rm.R")
d1 <- rnorm(2000)
d1[1:10] <- NA
d2 <- runif(2000)
d2[1:10] <- NA
d1 <- my_na_rm(d1)
d2 <- my_na_rm(d2)
NA.position <- function(x) {
idxs <- c()
i <- 0
for (e in x) {
if (is.na(e)) {
idxs <- c(idxs, i)
i <- i + 1
}
}
return(idxs)
}
my_vector <- c(1, 2, 3, NA, NA)
NA.position(my_vector)
NA.position <- function(x) {
idxs <- c()
i <- 0
for (e in x) {
if (is.na(e)) {
idxs <- c(idxs, i)
}
i <- i + 1
}
return(idxs)
}
my_vector <- c(1, 2, 3, NA, NA)
NA.position(my_vector)
NA.position <- function(x) {
idxs <- c()
i <- 1
for (e in x) {
if (is.na(e)) {
idxs <- c(idxs, i)
}
i <- i + 1
}
return(idxs)
}
my_vector <- c(1, 2, 3, NA, NA)
NA.position(my_vector)
table(my_vector)
table(my_vector, na.pass = F)
my_vector <- c(1, 2, 3,3, NA, NA)
NA.position(my_vector)
table(my_vector, na.pass)
table(my_vector)
table(my_vector, exclude = NULL)
rr <- table(my_vector, exclude = NULL)
names(rr)
rr[names(rr) == "NA"]
rr[names(rr) == "<NA>"]
rr <- table(my_vector, exclude = NULL)
rr
rr[names(rr) == "3"]
rr[names(rr) == "3"]
as.data.frame(rr[names(rr) == "3"])
as.data.frame(rr)
ff["1"]
ff <- as.data.frame(rr)
ff["1"]
ff$my_vector
sum(is.na(my_vector))
NA.counter(my_vector)
NA.counter <- function(x){
return(sum(is.na(x)))
}
NA.counter(my_vector)
setwd("~/Code/Stepik_R_1/m2/l4_functions")
dir(path = "./grants_data")
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(read.csv(filename), df)
}
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(read.csv("./grants_data"+filename), df)
}
"123"+"2"
paste("Hello", "world", sep=" ")
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(read.csv(paste("./grants_data/", filename, sep = "")), df)
}
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
#df <- rbind(), df)
}
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
df <- rbind(df, temp)
}
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
temp
#df <- rbind(df, temp)
}
temp
rbind(temp, df)
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
print(temp)
#df <- rbind(df, temp)
}
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
print(temp)
df = rbind(df, temp)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions/grants_data")
setwd("~/Code/Stepik_R_1/m2/l4_functions/grants_data")
for (filename in dir(pattern = "*.csv")) {
temp <- read.csv(filename)
df <-  rbind(df, temp)
}
for (filename in dir(pattern = "*.csv")) {
temp <- read.csv(filename)
grants <- rbind(temp, grants)
}
grants <- data.frame()
setwd("~/Code/Stepik_R_1/m2/l4_functions/grants_data")
for (filename in dir(pattern = "*.csv")) {
temp <- read.csv(filename)
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
temp <- read.csv(paste("./grants_data", filename, sep = ""))
for (filename in dir(path = "./grants_data", patpattern = "*.csv")) {
temp <- read.csv(paste("./grants_data", filename, sep = ""))
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
for (filename in dir(path = "./grants_data", patpattern = "*.csv")) {
temp <- read.csv(paste("./grants_data", filename, sep = ""))
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
#setwd("~/Code/Stepik_R_1/m2/l4_functions/grants_data")
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data", filename, sep = ""))
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
#setwd("~/Code/Stepik_R_1/m2/l4_functions/grants_data")
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
temp <- read.csv(paste("./grants_data/", filename, sep = ""))
grants <- rbind(temp, grants)
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
grants <- data.frame()
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
#temp <-
grants <- rbind(temp, read.csv(paste("./grants_data/", filename, sep = "")))
}
read_data <- function() {
df <- data.frame()
i <- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(temp, read.csv(paste("./grants_data/", filename, sep = "")))
i <- i + 1
}
print(paste(as.character(i), "Files were combined"))
}
grants <- read_data()
setwd("~/Code/Stepik_R_1/m2/l4_functions")
read_data <- function() {
df <- data.frame()
i <- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(temp, read.csv(paste("./grants_data/", filename, sep = "")))
i <- i + 1
}
print(paste(as.character(i), "Files were combined"))
}
grants <- read_data()
read_data <- function() {
df <- data.frame()
i <- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(df, read.csv(paste("./grants_data/", filename, sep = "")))
i <- i + 1
}
print(paste(as.character(i), "Files were combined"))
}
setwd("~/Code/Stepik_R_1/m2/l4_functions")
read_data <- function() {
df <- data.frame()
i <- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(df, read.csv(paste("./grants_data/", filename, sep = "")))
i <- i + 1
}
print(paste(as.character(i), "Files were combined"))
}
grants <- read_data()
setwd("~/Code/Stepik_R_1/m2/l4_functions")
read_data <- function() {
df <- data.frame()
# <<- доступно станет снаружи функции
number <<- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(df, read.csv(paste("./grants_data/", filename, sep = "")))
number <<- number + 1
}
print(paste(as.character(number), "Files were combined"))
}
grants <- read_data()
setwd("~/Code/Stepik_R_1/m2/l4_functions")
read_data <- function() {
df <- data.frame()
# <<- доступно станет снаружи функции
number <<- 0
for (filename in dir(path = "./grants_data", pattern = "*.csv")) {
df <- rbind(df, read.csv(paste("./grants_data/", filename, sep = "")))
number <<- number + 1
}
print(paste(as.character(number), "Files were combined"))
}
grants <- read_data()
number
