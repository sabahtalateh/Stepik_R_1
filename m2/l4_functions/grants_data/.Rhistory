subject <- factor(rep(1:5, 1, each = 3))
therapy_data <- data.frame(subject, sex, therapy)
therapy_data <- rbind(therapy_data, therapy_data)
price <- rep(c('high', 'low'), each = 15)
well_being <- c(rnorm(15, mean = 40, sd = 15), rnorm(15, mean = 60, sd = 15))
therapy_data$price <- as.factor(price)
therapy_data$well_being <- well_being
fit0 <- aov(well_being ~ therapy*price, data = therapy_data)
summary(fit0)
therapy <- rep(c('therapy1', 'therapy2', 'placebo'), 5, each = T)
sex <- c(rep('female', 6), rep('male', 9))
subject <- factor(rep(1:5, 1, each = 3))
therapy_data <- data.frame(subject, sex, therapy)
therapy_data <- rbind(therapy_data, therapy_data)
price <- rep(c('high', 'low'), each = 15)
well_being <- c(rnorm(15, mean = 40, sd = 15), rnorm(15, mean = 55, sd = 15))
therapy_data$price <- as.factor(price)
therapy_data$well_being <- well_being
fit0 <- aov(well_being ~ therapy, data = therapy_data)
summary(fit0)
fit <- aov(well_being ~ therapy + Error(subject/therapy), data = therapy_data)
summary(fit)
fit0 <- aov(well_being ~ therapy*price, data = therapy_data)
summary(fit0)
fit2 <- aov(well_being ~ price + Error(subject/price), data = therapy_data)
summary(fit2)
boxplot(well_being ~ price*subject, data = therapy_data)
aggregate(well_being ~ price*subject, FUN=mean, data = therapy_data)
fit3 <- aov(well_being ~ therapy*price*sex + Error(subject/(therapy*price)), data = therapy_data)
summary(fit3)
write.csv(therapy_data, 'therapy_data.csv')
mydata2 <- read.csv('therapy_data.csv')
mydata2 <- read.csv('therapy_data.csv')
fit3 <- aov(well_being ~ therapy*price, data = therapy_data)
summary(fit1)
fit3 <- aov(well_being ~ therapy*price, data = therapy_data)
fit3 <- aov(well_being ~ therapy*price, data = therapy_data)
summary(fit3)
mydata2$subject <- as.factor(mydata2$subject)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2)
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2)
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
fit3 <- aov(well_being ~ therapy*price*sex, data = mydata2)
summary(fit3)
fit3b <- aov(well_being ~ therapy*price*sex + Error(subject/(therapy*price)), data = mydata2)
summary(fit3b)
fit3b <- aov(well_being ~ therapy*price*sex + Error(subject/(therapy*price)) + sex, data = mydata2)
summary(fit3b)
library(ggplot2)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
mydata2 <- read.csv('therapy_data.csv')
str(mydata2)
mydata2$subject <- as.factor(mydata2$subject)
fit1 <- aov(well_being ~ therapy, data = mydata2)
summary(fit1)
fit1b <- aov(well_being ~ therapy + Error(subject/therapy), data = mydata2)
summary(fit1b)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
### ANOVA
library(ggplot2)
# formulae
DV ~ IV # One-way
DV ~ IV1 + IV2 # Two-way
DV ~ IV1:IV2  # Two-way interaction
DV ~ IV1 + IV2 + IV1:IV2 # Main effects + interaction
DV ~ IV1 * IV2  # The same: Main effects + interaction
DV ~ IV1 + IV2 + IV3 + IV1:IV2
DV ~ (IV1 + IV2 + IV3)^2 # main effects and all possible interactions up to level 2
DV ~ IV1 + Error(subject/IV1) # repeated measures
# reading data
mydata <- read.csv('shops.csv')
# One-way ANOVA
boxplot(price ~ origin, data=mydata)
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot()
fit <- aov(price ~ origin, data=mydata)
summary(fit)
# Two-way ANOVA
fit1 <- aov(price ~ origin + store, data=mydata)
summary(fit1)
model.tables(fit1,"means")
# Interaction
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
fit3 <- aov(price ~ origin + store + origin:store, data=mydata)
summary(fit3)
fit4 <- aov(price ~ origin * store, data=mydata)
summary(fit4)
# Pairwise comparisons
ggplot(mydata, aes(x = food, y = price)) +
geom_boxplot()
fit5 <- aov(price ~ food, data=mydata)
summary(fit5)
TukeyHSD(fit5)
mydata2 <- read.csv('therapy_data.csv')
str(mydata2)
View(mydata2)
mydata2$subject <- as.factor(mydata2$subject)
fit1 <- aov(well_being ~ therapy, data = mydata2)
summary(fit1)
fit1b <- aov(well_being ~ therapy + Error(subject/therapy), data = mydata2)
summary(fit1b)
View(mydata2)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
fit3 <- aov(well_being ~ therapy*price*sex, data = mydata2)
summary(fit3)
fit3b <- aov(well_being ~ therapy*price*sex + Error(subject/(therapy*price)), data = mydata2)
summary(fit3b)
fit1 <- aov(well_being ~ therapy, data = mydata2)
summary(fit1)
fit1b <- aov(well_being ~ therapy + Error(subject/therapy), data = mydata2)
summary(fit1b)
View(mydata)
View(mydata2)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
mydata2$subject <- as.factor(mydata2$subject)
fit1 <- aov(well_being ~ therapy, data = mydata2)
summary(fit1)
fit1b <- aov(well_being ~ therapy + Error(subject/therapy), data = mydata2)
summary(fit1b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
View(mydata2)
View(mydata2)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
cat("\14")
my_calc  <- function(x, y){
s  <- x + y
return(s)
}
my_calc(x = 10, y = 15)
result  <- my_calc(x = 10, y = 15)
my_calc  <- function(x, y){
s  <- x + y
d  <- x - y
return(s, d)
}
result  <- my_calc(x = 10, y = 15)
my_calc  <- function(x, y){
s  <- x + y
d  <- x - y
return(c(s, d))
}
result  <- my_calc(x = 10, y = 15)
result
s  <- 100
my_calc(x = 10, y = 15)
s
my_calc_2  <- function(x, y, z ){
s  <- x + y +z
d  <- x - y - z
return(c(s, d))
}
my_calc_2(1,2,3)
my_calc_2  <- function(x, y, z = 10 ){
s  <- x + y +z
d  <- x - y - z
return(c(s, d))
}
my_calc_2(1, 2)
cat("/14")
cat("\14")
distr1  <- rnorm(100)
hist(distr1)
distr1[1:30]  <- NA
is.na(distr1)
distr1[is.na(distr1)]  <- mean(distr1, na.rm = T)
distr1
mean(distr1, na.rm = T)
my_na_rm  <- function(x){
x[is.na(x)]  <- mean(x, na.rm = T)
return(x)
}
distr1  <- rnorm(100)
distr1[1:30]  <- NA
my_na_rm(x = distr1)
distr1  <- rnorm(100)
distr1[1:30]  <- NA
distr1  <- my_na_rm(x = distr1)
hist(distr1)
distr1
my_na_rm(x = c("2", "2"))
cat("/14")
cat("\14")
my_na_rm(x = c("2", "4"))
my_na_rm(x = c("2", "4", NA))
x =2
if (is.numeric(x))
2
rm(x)
cat("\14")
my_na_rm(x=c("2", "3", NA))
my_na_rm  <- function(x){
if (is.numeric(x)){
x[is.na(x)]  <- mean(x, na.rm = T)
return(x)
}
else{
print("X is not numeric")
}
}
my_na_rm(x=c("2", "3", NA))
stat_test  <- shapiro.test(rnorm(1000))
stat_test
stat_test$p.value
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
}
return(x)
}
else{
print("X is not numeric")
}
}
distr1  <- rnorm(1000)
distr1[1:30]  <- NA
distr1  <- my_na_rm(distr1)
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced witn mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced witn median")
}
return(x)
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(1000)
d2  <- runif(1000)
d1  <- my_na_rm(d1)
d1  <- my_na_rm(d1)
d1  <- my_na_rm(d1)
d1  <- rnorm(1000)
d1  <- my_na_rm(d1)
d1  <- my_na_rm(d1)
d1  <- rnorm(1000)
d2  <- runif(1000)
d1  <- my_na_rm(d1)
d2  <- runif(1000)
d1  <- my_na_rm(d1)
d1  <- rnorm(1000)
d1  <- my_na_rm(d1)
d1  <- rnorm(1000)
d1  <- my_na_rm(d1)
rm(d1, d2)
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(10000)
d2  <- runif(10000)
d1  <- my_na_rm(d1)
d1  <- rnorm(1000)
d2  <- runif(1000)
d1  <- my_na_rm(d1)
cat("\14")
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(2000)
d2  <- runif(2000)
d1[1:10]  <- NA
d2[1:10]  <- NA
d1  <- my_na_rm(d1)
d2  <- my_na_rm(d2)
d1
d1
d1
d1
d1
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
return(x)
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(2000)
d1
cat("\14")
rm(d1,d2)
cat("\14")
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
return(x)
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(2000)
d2  <- runif(2000)
d2[1:10]  <- NA
d1  <- my_na_rm(d1)
d1
head(d1)
cat("/14")
cat("\14")
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
}
else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
return(x)
}
else{
print("X is not numeric")
}
}
d1  <- rnorm(2000)
d2  <- runif(2000)
d2[1:10]  <- NA
d1[1:10]  <- NA
d1  <- my_na_rm(d1)
head(d1)
d2  <- my_na_rm(d2)
head(d2)
d1  <- rnorm(1000)
d1[1:10]  <- NA
setwd("~/R/RCourse")
source("my_mean.RData")
dir()
source("my_mean.RData")
dir()
dir()
cat("\14")
rm(d1)
cat("\14")
d1  <- rnorm(1000)
d1[1:10]  <- NA
source("my_na_rm.R")
my_na_rm(d1)
cat("\14")
setwd("~/R/Grants data")
dir()
dir(pattern = "*.csv")
grants  <- data.frame()
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
grants  <- rbind(temp_df, grants)
}
View(grants)
read_data  <- function(){
df  <- data.frame()
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
df  <- rbind(temp_dfm df)
}
return(df)
}
cat("\14")
read_data  <- function(){
df  <- data.frame()
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
df  <- rbind(temp_df, df)
}
return(df)
}
grants2  <- read_data()
View(grants2)
read_data  <- function(){
df  <- data.frame()
number  <- 0
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
df  <- rbind(temp_df, df)
number  <- number +1
}
print(paste(as.character(number), "files were combined"))
return(df)
}
grants2  <- read_data()
read_data  <- function(){
df  <- data.frame()
number  <<- 0
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
df  <- rbind(temp_df, df)
number  <- number +1
}
print(paste(as.character(number), "files were combined"))
return(df)
}
grants2  <- read_data()
grants2  <- read_data()
grants2
g  <- read_data()
cat("\14")
rm(g, number)
cat("\14")
read_data  <- function(){
df  <- data.frame()
number  <<- 0
for (i in dir(pattern = "*.csv")){
temp_df  <- read.csv(i)
df  <- rbind(temp_df, df)
number  <<- number +1
}
print(paste(as.character(number), "files were combined"))
return(df)
}
grants2  <- read_data()
number
