v <- c(1, -2, 3, NA, NA)
sum(v)
sum(v, na.rm = T)
sum(v[v > 0], na.rm = T)
v <- rnorm(10)
boxplot(v)
v <- rnorm(20, sd = 3)
str(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
library(ggplot2)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
str(v)
v <- as.data.frame(v)
View(v)
library(ggplot2)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 3, mean = 0)
library(ggplot2)
v <- rnorm(20, sd = 3, mean = 0)
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
library(ggplot2)
v <- rnorm(20, sd = 3, mean = 0)
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 3, mean = 0)
v <- c(v, 5)
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 1, mean = 0)
v <- c(v, 5)
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
library(ggplot2)
v <- rnorm(20, sd = 1, mean = 0)
v <- c(v, 5)
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 1, mean = 0)
v <- c(v, c(5, 4, -5, -4))
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 2, mean = 0)
v <- c(v, c(5, 4, -5, -4))
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
v <- rnorm(20, sd = 2, mean = 0)
v <- c(v, c(5, 4, -5, -4))
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
library(ggplot2)
v <- rnorm(20, sd = 1, mean = 0)
v <- c(v, c(5, 4, -5, -4))
v <- as.data.frame(v)
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
IQR(v$v)
quantile(v$v, probs = c("0.25", "0.75"))
IQR(v$v)
quantile(v$v, probs = c(0.25, 0.75))
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
quantile(v$v, probs = c(0.25, 0.75))
gg <- quantile(v$v, probs = c(0.25, 0.75))
gg
gg[1]
gg[2]
gg[2] + 1
gg[2] > 2
IQR(v$v)
q <- quantile(v$v, probs = c(0.25, 0.75))
ggplot(v, aes(x = "x", y = v))+
geom_boxplot()
q[1]
vv[vv < (q[1] - 1.5*IQR(vv))]
vv <- v$v
vv[vv < (q[1] - 1.5*IQR(vv))]
vv[vv > (q[1] - 1.5*IQR(vv))]
vv[(vv > (q[1] - 1.5*IQR(vv))) & (vv > (q[2] + 1.5*IQR(vv)))]
vv[(vv > (q[1] - 1.5*IQR(vv))) & (vv > (q[2] + 1.5*IQR(vv)))]
vv[(vv > (q[1] - 1.5*IQR(vv))) & (vv < (q[2] + 1.5*IQR(vv)))]
outliers.rm <- function(x){
q <- quantile(x, probs = c(0.25, 0.75))
iqr <- IQR(x)
return(
x[x > (q[1] - 1.5*iqr) & vv < (q[2] + 1.5*iqr)]
)
}
outliers.rm(v$v)
df <- mtcars
cor.test(df)
df <- mtcars
cor.test(x = df$mpg, y = df$hp)
fit <- cor.test(x = df$mpg, y = df$hp)
str(fit)
cor.test(~ mpg + hp, df)
cor.test(~ mpg + mpg, df)
cor.test(x = df$mpg, y = df$mpg)
cor.test(~ mpg + hp, df)
cor.test(~ hp + mpg, df)
cor.test(~ mpg + hp, df)
plot(x = df$mpg, y = df$hp)
ggplot(df, aes(x = df$mpg, y = df$hp))+
geom_point()
ggplot(df, aes(x = df$mpg, y = df$hp))+
geom_point(size = 5)
ggplot(df, aes(x = df$mpg, y = df$hp, col = factor(cyl)))+
geom_point(size = 5)
df_numeric <- df[,c(1,3:7)]
pairs(df_numeric)
cor(df_numeric)
library(psych)
corr <- corr.test(df_numeric)
str(corr)
corr$r
corr.test(df[, c(1,5)])
f <- corr.test(df[, c(1,5)])
f$p
corr$r
corr$r
f <- corr.test(df[, c(1,5)])
f$r
f$r[1]
f <- corr.test(df[, c(1,5)])
f$r[1]
f$r[[1]]
f$r[[1]][1]
f$r[[1]][2]
f$r[1]
f$r[2]
f$r[,2]
f$r[,1]
f$r[,1][2]
f$p
corr.calc <- function(x) {
library(psych)
fit <- corr.test(x)
return(fit$r[2], fit$p[2])
}
corr.calc(mtcars[, c(1,5)])
corr.calc <- function(x) {
library(psych)
fit <- corr.test(x)
return(c(fit$r[2], fit$p[2]))
}
corr.calc(mtcars[, c(1,5)])
setwd("~/Code/Stepik_R_1/m3/1.correlation_and_simple_linear_regression")
step6 <- read.table("step6.csv",  header=TRUE, sep=',' )
View(step6)
step6[is.numeric(step6)]
step6[is.numeric(step6)]
step6 <- read.table("step6.csv",  header=TRUE, sep=',' )
nums <- sapply(step6, is.numeric)
str(nums)
nums
nums <- step6[sapply(step6, is.numeric)]
step6 <- read.table("step6.csv",  header=TRUE, sep=',' )
nums <- step6[sapply(step6, is.numeric)]
corr.test(nums)
fff <- corr.test(nums)
fff$r
diag(fff$r)
diag(fff$r) <- 0
fff$r
fff$r
fff <- corr.test(nums)
r <- fff$r
diag(r) <- 0
r
View(r)
max(r)
max(abs(r))
iris$Petal.Length <- -iris$Petal.Length
step6 <- iris
nums <- step6[sapply(step6, is.numeric)]
fff <- corr.test(nums)
r <- fff$r
diag(r) <- 0
max(abs(r))
which.max(abs(r))
r[12]
filtered.cor <- function(x) {
nums <- x[sapply(x, is.numeric)]
r <- corr.test(nums)$r
diag(r) <- 0
return(r[which.max(abs(r))])
}
step6 <- read.table("step6.csv",  header=TRUE, sep=',' )
filtered.cor(step6)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
iris$Petal.Length <- -iris$Petal.Length
filtered.cor(iris)
test_data  <- read.csv("https://stepik.org/media/attachments/course/129/test_data.csvÿ")
test_data  <- read.csv("https://stepik.org/media/attachments/course/129/test_data.csv")
test_data
shapiro.test(test_data)
test_data  <- read.csv("https://stepik.org/media/attachments/course/129/test_data.csv")
shapiro.test(test_data[1], test_data[2])
shapiro.test(test_data[1])
test_data <- read.csv("https://stepik.org/media/attachments/course/129/test_data.csv")
test_data
View(test_data)
shapiro.test(test_data[, 1])
test_data[, 1]
test_data
shapiro.test(test_data[, 1])
gg <- shapiro.test(test_data[, 1])
?corr.test
corr.test(method = "spearman")
corr.test(method = "spearman")
corr.test(test_data, method = "spearman")
corr.test(test_data)
corr.test(test_data)[,1]
corr.test(test_data)[1]
corr.test(test_data)[2]
corr.test(test_data)$r[2]
corr.test(test_data)$r
corr.test(test_data)
yy <- corr.test(test_data)
str(yy)
yy$r
yy <- corr.test(test_data)
corr.test(test_data)
yy$r[2]
yy <- corr.test(test_data)$r[2]
smart_cor <- function(x) {
first_col_test <- shapiro.test(test_data[, 1])
second_col_test <- shapiro.test(test_data[, 2])
method <- "pearson"
if (first_col_test$p < 0.05 | second_col_test$p < 0.05) {
method <- "spearman"
}
return(corr.test(test_data, method = method)$r[2])
}
smart_cor <- function(x) {
first_col_test <- shapiro.test(x[, 1])
second_col_test <- shapiro.test(x[, 2])
method <- "pearson"
if (first_col_test$p < 0.05 | second_col_test$p < 0.05) {
method <- "spearman"
}
return(corr.test(x, method = method)$r[2])
}
smart_cor(test_data)
